{"version":3,"file":"component---src-pages-services-apps-tsx-77f251b3087170185f0b.js","mappings":"uIAmDA,IAlCgCA,IAAuC,IAAtC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUH,EAkB7D,OACII,EAAAA,cAAAA,EAAAA,SAAA,KAUKD,EACF,C,uHCzCX,MASaE,EAAOA,IAAMD,EAAAA,cAACE,EAAAA,EAAG,CAACJ,MAAM,YAErC,UAX2BK,IAEvBH,EAAAA,cAACI,EAAAA,EAAM,KACHJ,EAAAA,cAACK,EAAAA,EAAc,CAACC,MAAOC,EAAAA,I","sources":["webpack://plankton-website/./src/components/seo.tsx","webpack://plankton-website/./src/pages/services/apps.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport {ReactNode} from \"react\";\n\ninterface SeoProps {\n    description?: string;\n    title: string;\n    children?: ReactNode;\n}\n\nconst Seo: React.FC<SeoProps> = ({ description, title, children }) => {\n    // const { site } = useStaticQuery(\n    //     graphql`\n    //   query {\n    //     site {\n    //       siteMetadata {\n    //         title\n    //         description\n    //         author\n    //       }\n    //     }\n    //   }\n    // `\n    // )\n\n    // const metaDescription = description || site.siteMetadata.description\n    // const defaultTitle = site.siteMetadata?.title\n\n    return (\n        <>\n            {/*<title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>*/}\n            {/*<meta name=\"description\" content={metaDescription} />*/}\n            {/*<meta property=\"og:title\" content={title} />*/}\n            {/*<meta property=\"og:description\" content={metaDescription} />*/}\n            {/*<meta property=\"og:type\" content=\"website\" />*/}\n            {/*<meta name=\"twitter:card\" content=\"summary\" />*/}\n            {/*<meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />*/}\n            {/*<meta name=\"twitter:title\" content={title} />*/}\n            {/*<meta name=\"twitter:description\" content={metaDescription} />*/}\n            {children}\n        </>\n    )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport { FluentProvider } from '@fluentui/react-components';\nimport { planktonTheme } from '../../planktonTheme';\n\nconst AppsPage: React.FC = () => {\n      return (\n    <Layout>\n        <FluentProvider theme={planktonTheme} >\n           \n        </FluentProvider>\n    </Layout>\n)\n}\nexport const Head = () => <Seo title=\"Website\" />\n\nexport default AppsPage\n"],"names":["_ref","description","title","children","React","Head","Seo","AppsPage","Layout","FluentProvider","theme","planktonTheme"],"sourceRoot":""}